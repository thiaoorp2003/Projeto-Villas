CarInputScreen.js (Villas)

import React, { useState } from 'react';
import { StyleSheet, Text, View, TextInput, TouchableOpacity, Image, Alert } from 'react-native';
import AsyncStorage from '@react-native-async-storage/async-storage';

export default function CarInputScreen({ navigation }) {
  const [carInfo, setCarInfo] = useState('');
  const [date, setDate] = useState('');
  const [hour, setHour] = useState('');
  const [hour1, setHour1] = useState('');
  const [destino, setDestino] = useState('');
  const [cadastrofuncionario, setCadastro] = useState('');

  const handleSubmit = async () => {
    if (cadastrofuncionario === '' || carInfo === '' || date === '' || hour === '' || destino === '') {
      Alert.alert('Preencha todas as informações', 'Por favor, preencha todos os campos para continuar.');
    } else {
      try {
        const viagem = {
          cadastrofuncionario,
          carInfo,
          date,
          hour,
          hour1,
          destino,
        };

        // Obter a lista de viagens existentes do AsyncStorage
        const viagensData = await AsyncStorage.getItem('viagens');
        let viagens = [];
        if (viagensData) {
          viagens = JSON.parse(viagensData);
        }

        // Adicionar a nova viagem à lista
        viagens.push(viagem);

        // Salvar a lista atualizada de viagens no AsyncStorage
        await AsyncStorage.setItem('viagens', JSON.stringify(viagens));

        console.log('Informações da viagem salvas no banco de dados.');

        Alert.alert('Obrigado!', 'Informações enviadas com sucesso.');
        navigation.goBack();
      } catch (error) {
        Alert.alert('Erro', 'Erro ao salvar as informações da viagem no banco de dados.');
        console.log('Erro ao salvar no banco de dados:', error);
      }
    }
  };

  return (
    <View style={styles.container}>
      <Image
        source={require('../assets/logo.png')} 
        style={styles.logo}
      />

      <Text style={styles.heading}>Informações do Carro</Text>

      <TextInput
        placeholder="Cadastro Funcionario"
        onChangeText={(text) => setCadastro(text)}
        value={cadastrofuncionario}
        style={styles.input}
      />

      <TextInput
        placeholder="Veículo e placa "
        onChangeText={(text) => setCarInfo(text)}
        value={carInfo}
        style={styles.input}
      />
      <TextInput
        placeholder="Data"
        onChangeText={(text) => setDate(text)}
        value={date}
        style={styles.input}
      />
      
      <TextInput
        placeholder="Destino"
        onChangeText={(text) => setDestino(text)}
        value={destino}
        style={styles.input}
      />

      <TextInput
        placeholder="Hora de saida"
        onChangeText={(text) => setHour(text)}
        value={hour}
        style={styles.input}
      />

      <TextInput
        placeholder="Hora de chegada"
        onChangeText={(text) => setHour1(text)}
        value={hour1}
        style={styles.input}
      />

      <TouchableOpacity style={styles.button} onPress={handleSubmit}>
        <Text style={styles.buttonText}>Enviar</Text>
      </TouchableOpacity>
    </View>
  );
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: '#fff',
    alignItems: 'center',
    justifyContent: 'center',
  },
  heading: {
    fontSize: 24,
    fontWeight: 'bold',
    marginBottom: 20,
  },
  input: {
    width: '80%',
    height: 40,
    borderColor: 'gray',
    borderWidth: 1,
    paddingHorizontal: 10,
    marginBottom: 20,
    backgroundColor: '#fff', 
    borderRadius: 10, 
  },
  button: {
    backgroundColor: '#FF0000',
    paddingVertical: 15,
    paddingHorizontal: 25,
    borderRadius: 8,
    marginBottom: 10,
  },
  buttonText: {
    color: '#fff',
    fontSize: 16,
    fontWeight: 'bold',
  },

  logo: {
    width: 300,
    height: 100,
    marginBottom: 40,
  },
});
