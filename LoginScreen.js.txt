LoginScreen.js

import React, { useEffect, useState } from 'react';
import { StyleSheet, Text, View, FlatList, TouchableOpacity, Alert, TextInput, Image } from 'react-native';
import AsyncStorage from '@react-native-async-storage/async-storage';

export default function LoginScreen({ navigation }) {
  const [NumeroCadastro, setNumeroCadastro] = useState('');
  const [password, setPassword] = useState('');

  useEffect(() => {
    loadStoredData();
  }, []);

  const loadStoredData = async () => {
    try {
      const savedNumeroCadastro = await AsyncStorage.getItem('NumeroCadastro');
      const savedPassword = await AsyncStorage.getItem('password');
      if (savedNumeroCadastro !== null && savedPassword !== null) {
        setNumeroCadastro(savedNumeroCadastro);
        setPassword(savedPassword);
      }
    } catch (error) {
      console.log('Error loading data from AsyncStorage:', error);
    }
  };

  const handleLogin = async () => {
    if (!NumeroCadastro || !password) {
      Alert.alert('Atenção', 'Por favor, preencha todas as informações.');
      return;
    }

    try {
      // Implemente sua lógica de verificação de login aqui
      const users = await AsyncStorage.getItem('users');
      if (users) {
        const parsedUsers = JSON.parse(users);
        const existingUser = parsedUsers.find(user => user.NumeroCadastro === NumeroCadastro && user.password === password);
        if (existingUser) {
          navigation.navigate('Home');
          return;
        }
      }

      Alert.alert('Erro', 'Número de cadastro ou senha incorretos.');
    } catch (error) {
      console.log('Error signing in:', error);
      Alert.alert('Erro', 'Ocorreu um erro ao fazer login.');
    }
  };

  const handleSignup = () => {
    navigation.navigate('Signup');
  };

  const handleViewUsers = () => {
    navigation.navigate('Users');
  };

  return (
    <View style={styles.container}>

<Image
        source={require('../assets/logo.png')} 
        style={styles.logo}
      />

      <Text style={styles.heading}>Login</Text>
      <TextInput
        placeholder="Numero Cadastro"
        onChangeText={(text) => setNumeroCadastro(text)}
        value={NumeroCadastro}
        style={styles.input}
      />
      <TextInput
        placeholder="Senha"
        onChangeText={(text) => setPassword(text)}
        value={password}
        secureTextEntry={true}
        style={styles.input}
      />
      <TouchableOpacity style={styles.button} onPress={handleLogin}>
        <Text style={styles.buttonText}>Entrar</Text>
      </TouchableOpacity>
      <TouchableOpacity style={styles.signupButton} onPress={handleSignup}>
        <Text style={styles.signupText}>Não tem uma conta? Cadastre-se aqui.</Text>
      </TouchableOpacity>
      <TouchableOpacity style={styles.signupButton} onPress={handleViewUsers}>
        <Text style={styles.signupText}>Ver todos os usuários</Text>
      </TouchableOpacity>
    </View>
  );
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: '#fff',
    alignItems: 'center',
    justifyContent: 'center',
  },
  heading: {
    fontSize: 30,
    fontWeight: 'bold',
    marginBottom: 20,
  },
  input: {
    width: '80%',
    height: 40,
    borderColor: 'gray',
    borderWidth: 1,
    paddingHorizontal: 10,
    marginBottom: 20,
    backgroundColor: '#fff',
    borderRadius: 10,
  },
  button: {
    backgroundColor: '#FF0000',
    paddingVertical: 15,
    paddingHorizontal: 25,
    borderRadius: 8,
    marginBottom: 10,
  },
  buttonText: {
    color: '#fff',
    fontSize: 16,
    fontWeight: 'bold',
  },
  signupButton: {
    backgroundColor: '#FF0000',
    paddingVertical: 15,
    paddingHorizontal: 25,
    borderRadius: 8,
    height: 50,
    width: 300,
    marginBottom: 10,
  },
  signupText: {
    color: '#fff',
    fontSize: 16,
    fontWeight: 'bold',
  },
  logo: {
    width: 300,
    height: 100,
    marginBottom: 40,
  },
});
